// <auto-generated />
using System;
using AkidoTrainingWebAPI.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkidoTrainingWebAPI.Migrations
{
    [DbContext(typeof(AkidoTrainingWebAPIContext))]
    [Migration("20241220211358_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkidoTrainingWebAPI.DataAccess.Models.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Belt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Belt = "Black",
                            Email = "getheaded@example.com",
                            ImagePath = "Default.jpg",
                            Level = 1,
                            Name = "Head Admin",
                            Password = "Password123",
                            Role = "Head Admin"
                        },
                        new
                        {
                            Id = 2,
                            Belt = "Black",
                            Email = "user1@example.com",
                            ImagePath = "Default.jpg",
                            Level = 2,
                            Name = "User1",
                            Password = "User1Password123",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Belt = "Black",
                            Email = "user2@example.com",
                            ImagePath = "Default.jpg",
                            Level = 2,
                            Name = "User2",
                            Password = "User2Password123",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("AkidoTrainingWebAPI.DataAccess.Models.Roles", b =>
                {
                    b.Property<int>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolesId"));

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolesId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolesId = 1,
                            RoleName = "Head Admin"
                        },
                        new
                        {
                            RolesId = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RolesId = 3,
                            RoleName = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
